eval(atob('"use strict";function switchHamburgerStatus(){var t=$(".hamburger");t.hasClass("is-active")?(t.removeClass("is-active"),$("#navigation").removeClass("is-active"),$("body").removeClass("is-active")):(t.addClass("is-active"),$("#navigation").addClass("is-active"),$("body").addClass("is-active"))}(new WOW).init(),$("body").waitMe({effect:"orbit",bg:"linear-gradient(135deg, #fca8d9 0%,#fca8d9 53%,#48b9db 53%,#48b9db 100%)",color:["#ffffff","#ffffff","#ffffff"],text:langload.preloading_title}),$(function(){$(".hamburger").on("click",function(){switchHamburgerStatus()})}),$.fn.extend({animateCss:function(t){var e="webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend";this.addClass("animated "+t).one(e,function(){$(this).removeClass("animated "+t)})}}),$(document).ready(function(){function t(){return"undefined"!=typeof window.orientation||navigator.userAgent.indexOf("IEMobile")!==-1}var e=new Swiper(".swiper-container",{loop:!0,autoHeight:!0,autoplay:4e3,autoplayDisableOnInteraction:!1,nextButton:".right_arrow",prevButton:".left_arrow",preloadImages:!1,lazyLoading:!0,speed:750,grabCursor:!0});e.on("slideChangeStart",function(t){$(".srt-item").removeClass("on"),t.previousIndex-t.activeIndex>0?$(".srt-item").eq(t.realIndex).stop().addClass("on").animateCss("fadeInUp"):$(".srt-item").eq(t.realIndex).stop().addClass("on").animateCss("flipInX")}),t()?e.stopAutoplay():e.startAutoplay(),$(".website_host_cdn_center_main").tilt({scale:1})});var topMenuFixed=0,changeMenuFixCond=function(){var t=$(window).scrollTop();t>=300&&0==topMenuFixed?($("#main_nav").addClass("fixed"),$(".main_nav_option").animateCss("fadeInUp"),topMenuFixed=1):t<=200&&1==topMenuFixed&&($(".main_nav_option").removeClass("animated fadeInUp"),$("#main_nav").removeClass("fixed"),topMenuFixed=0)};changeMenuFixCond();var switchFixSideMenuActive=function(t){$(".fix_side_menu_a").removeClass("on"),$(".fix_side_menu_a").eq(t).addClass("on")},setCurrentPageToLock=function(t){$.each(sectionObj,function(t){sectionObj[t].on=0}),sectionObj[t].on=1},switchStatusForFixSideMenu=function(t){var e=sectionObj[t];$("#fix_side_menu").removeClass().addClass("fix_side_menu"),$("#fix_side_menu").addClass(e.type)},onAnimatePage=0,startAnimate_and_switchStatus=function(t){if(1!=onAnimatePage){onAnimatePage=1;var e=sectionObj[t];switchFixSideMenuActive(t),switchStatusForFixSideMenu(t),$("title").text(sectionObj[t].metatitle),$("html, body").stop().animate({scrollTop:$(e.tg).offset().top-50},700).promise().then(function(){history.replaceState(void 0,void 0,"#"+sectionObj[t].path),window.location.hash="#"+sectionObj[t].path,setCurrentPageToLock(t),onAnimatePage=0},function(){})}},st_init=0,s_h=0,checkSectionTop=function(){s_h=$(window).scrollTop()+$(window).height()/2,$.each(sectionObj,function(t){s_h-$(sectionObj[t].tg).offset().top>0&&s_h-$(sectionObj[t].tg).offset().top<$(sectionObj[t].tg).height()-sectionObj[t].param&&0==sectionObj[t].on&&0==onAnimatePage&&(switchFixSideMenuActive(t),switchStatusForFixSideMenu(t),history.replaceState(void 0,void 0,"#"+sectionObj[t].path),setCurrentPageToLock(t))})};$(window).scroll(function(){changeMenuFixCond(),checkSectionTop()});var dodec_today=new Vue({el:"#dodec_today",data:{getdate:{month:"00",day:"00",msg:"--"}},created:function(){this.getdate=this.getDateFn()},methods:{getDateFn:function(){var t=new Date,e=t.getMonth()+1,n=t.getDate(),a=t.getHours(),i=this.getHourMsgFn(a)+" "+langload.hello,o=("0"+e).slice(-2),s=("0"+n).slice(-2);return{month:o,day:s,msg:i}},getHourMsgFn:function(t){var e="";return e=t>=0&&t<5||t>=18&&t<24?langload.good_night:t>=5&&t<11?langload.good_morning:t>=11&&t<14?langload.good_afternoon:t>=14&&t<18?"Hi":"Hello"}}}),mobile_menu=new Vue({el:".nmc_list",methods:{gotoSection:function(t){switchHamburgerStatus(),startAnimate_and_switchStatus(t)}}}),set_container=new Vue({el:".set-container",methods:{gotoSection:function(t){startAnimate_and_switchStatus(t)},changeEff:function(t){$(event.currentTarget).animateCss("flipInX")}}}),sub_btn_content=new Vue({el:".sub_btn_content",methods:{gotoSection:function(t){startAnimate_and_switchStatus(t)}}}),continues_main_box=new Vue({el:".continues_main_box",methods:{gotoSection:function(t){startAnimate_and_switchStatus(t)}}}),fix_side_menu=new Vue({el:"#fix_side_menu",data:{sectionData:sectionObj},methods:{gotoSection:function(t){startAnimate_and_switchStatus(t)}}}),production_list=new Vue({el:"#production_list",data:{product_items:product_obj,img_src:langload.img_src},methods:{showCase:function(t){$.featherlight({iframe:"product_detail.html?t=20170620&parent=1#/id/"+t,beforeOpen:function(){$(".featherlight-content").hide()},afterOpen:function(){$(".featherlight-content").fadeIn()},beforeClose:function(){$(".featherlight-content").fadeOut()}})}}}),contact_us=new Vue({el:"#contact_us",methods:{contact_us:function(){$.featherlight({iframe:"contact_us.html",beforeOpen:function(){$(".featherlight-content").hide()},afterOpen:function(){$(".featherlight-content").fadeIn()},beforeClose:function(){$(".featherlight-content").fadeOut()}})}}}),about_us=new Vue({el:"#about_us",data:{sectionData:sectionObj},methods:{gotoSection:function(t){startAnimate_and_switchStatus(t)}}}),router=new VueRouter({base:"/",routes:[{path:"/",redirect:langload.dodec_design_slogan,beforeEnter:function(t,e,n){startAnimate_and_switchStatus(0)}},{path:"/"+langload.dodec_design_slogan,beforeEnter:function(t,e,n){startAnimate_and_switchStatus(0)}},{path:"/rwd",beforeEnter:function(t,e,n){startAnimate_and_switchStatus(1)}},{path:"/design",beforeEnter:function(t,e,n){startAnimate_and_switchStatus(2)}},{path:"/host",beforeEnter:function(t,e,n){startAnimate_and_switchStatus(3)}},{path:"/planning",beforeEnter:function(t,e,n){startAnimate_and_switchStatus(4)}},{path:"/case",beforeEnter:function(t,e,n){startAnimate_and_switchStatus(5)}},{path:"/case",beforeEnter:function(t,e,n){startAnimate_and_switchStatus(5)}},{path:"/contact",beforeEnter:function(t,e,n){startAnimate_and_switchStatus(6)}},{path:"*",redirect:langload.dodec_design_slogan}]}),app=new Vue({el:"#app",router:router});'));